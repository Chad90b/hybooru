CREATE TABLE services ( service_id INTEGER PRIMARY KEY AUTOINCREMENT, service_key BLOB_BYTES UNIQUE, service_type INTEGER, name TEXT, dictionary_string TEXT );
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE alternate_file_groups ( alternates_group_id INTEGER PRIMARY KEY );
CREATE TABLE alternate_file_group_members ( alternates_group_id INTEGER, media_id INTEGER UNIQUE, PRIMARY KEY ( alternates_group_id, media_id ) );
CREATE TABLE analyze_timestamps ( name TEXT, num_rows INTEGER, timestamp INTEGER );
CREATE TABLE client_files_locations ( prefix TEXT, location TEXT );
CREATE TABLE ideal_client_files_locations ( location TEXT, weight INTEGER );
CREATE TABLE ideal_thumbnail_override_location ( location TEXT );
CREATE TABLE current_files ( service_id INTEGER, hash_id INTEGER, timestamp INTEGER, PRIMARY KEY ( service_id, hash_id ) );
CREATE TABLE deleted_files ( service_id INTEGER, hash_id INTEGER, PRIMARY KEY ( service_id, hash_id ) );
CREATE TABLE duplicate_files ( media_id INTEGER PRIMARY KEY, king_hash_id INTEGER UNIQUE );
CREATE TABLE duplicate_file_members ( media_id INTEGER, hash_id INTEGER UNIQUE, PRIMARY KEY ( media_id, hash_id ) );
CREATE TABLE duplicate_false_positives ( smaller_alternates_group_id INTEGER, larger_alternates_group_id INTEGER, PRIMARY KEY ( smaller_alternates_group_id, larger_alternates_group_id ) );
CREATE TABLE potential_duplicate_pairs ( smaller_media_id INTEGER, larger_media_id INTEGER, distance INTEGER, PRIMARY KEY ( smaller_media_id, larger_media_id ) );
CREATE TABLE confirmed_alternate_pairs ( smaller_media_id INTEGER, larger_media_id INTEGER, PRIMARY KEY ( smaller_media_id, larger_media_id ) );
CREATE TABLE local_file_deletion_reasons ( hash_id INTEGER PRIMARY KEY, reason_id INTEGER );
CREATE TABLE file_inbox ( hash_id INTEGER PRIMARY KEY );
CREATE TABLE files_info ( hash_id INTEGER PRIMARY KEY, size INTEGER, mime INTEGER, width INTEGER, height INTEGER, duration INTEGER, num_frames INTEGER, has_audio INTEGER_BOOLEAN, num_words INTEGER );
CREATE TABLE file_notes ( hash_id INTEGER, name_id INTEGER, note_id INTEGER, PRIMARY KEY ( hash_id, name_id ) );
CREATE TABLE file_transfers ( service_id INTEGER, hash_id INTEGER, PRIMARY KEY ( service_id, hash_id ) );
CREATE TABLE file_petitions ( service_id INTEGER, hash_id INTEGER, reason_id INTEGER, PRIMARY KEY ( service_id, hash_id, reason_id ) );
CREATE TABLE json_dict ( name TEXT PRIMARY KEY, dump BLOB_BYTES );
CREATE TABLE json_dumps ( dump_type INTEGER PRIMARY KEY, version INTEGER, dump BLOB_BYTES );
CREATE TABLE json_dumps_named ( dump_type INTEGER, dump_name TEXT, version INTEGER, timestamp INTEGER, dump BLOB_BYTES, PRIMARY KEY ( dump_type, dump_name, timestamp ) );
CREATE TABLE last_shutdown_work_time ( last_shutdown_work_time INTEGER );
CREATE TABLE local_ratings ( service_id INTEGER, hash_id INTEGER, rating REAL, PRIMARY KEY ( service_id, hash_id ) );
CREATE TABLE file_modified_timestamps ( hash_id INTEGER PRIMARY KEY, file_modified_timestamp INTEGER );
CREATE TABLE options ( options TEXT_YAML );
CREATE TABLE recent_tags ( service_id INTEGER, tag_id INTEGER, timestamp INTEGER, PRIMARY KEY ( service_id, tag_id ) );
CREATE TABLE remote_thumbnails ( service_id INTEGER, hash_id INTEGER, PRIMARY KEY( service_id, hash_id ) );
CREATE TABLE service_filenames ( service_id INTEGER, hash_id INTEGER, filename TEXT, PRIMARY KEY ( service_id, hash_id ) );
CREATE TABLE service_directories ( service_id INTEGER, directory_id INTEGER, num_files INTEGER, total_size INTEGER, note TEXT, PRIMARY KEY ( service_id, directory_id ) );
CREATE TABLE service_directory_file_map ( service_id INTEGER, directory_id INTEGER, hash_id INTEGER, PRIMARY KEY ( service_id, directory_id, hash_id ) );
CREATE TABLE service_info ( service_id INTEGER, info_type INTEGER, info INTEGER, PRIMARY KEY ( service_id, info_type ) );
CREATE TABLE statuses ( status_id INTEGER PRIMARY KEY, status TEXT UNIQUE );
CREATE TABLE tag_parents ( service_id INTEGER, child_tag_id INTEGER, parent_tag_id INTEGER, status INTEGER, PRIMARY KEY ( service_id, child_tag_id, parent_tag_id, status ) );
CREATE TABLE tag_parent_petitions ( service_id INTEGER, child_tag_id INTEGER, parent_tag_id INTEGER, status INTEGER, reason_id INTEGER, PRIMARY KEY ( service_id, child_tag_id, parent_tag_id, status ) );
CREATE TABLE tag_siblings ( service_id INTEGER, bad_tag_id INTEGER, good_tag_id INTEGER, status INTEGER, PRIMARY KEY ( service_id, bad_tag_id, status ) );
CREATE TABLE tag_sibling_petitions ( service_id INTEGER, bad_tag_id INTEGER, good_tag_id INTEGER, status INTEGER, reason_id INTEGER, PRIMARY KEY ( service_id, bad_tag_id, status ) );
CREATE TABLE url_map ( hash_id INTEGER, url_id INTEGER, PRIMARY KEY ( hash_id, url_id ) );
CREATE TABLE vacuum_timestamps ( name TEXT, timestamp INTEGER );
CREATE TABLE file_viewing_stats ( hash_id INTEGER PRIMARY KEY, preview_views INTEGER, preview_viewtime INTEGER, media_views INTEGER, media_viewtime INTEGER );
CREATE TABLE version ( version INTEGER );
CREATE TABLE yaml_dumps ( dump_type INTEGER, dump_name TEXT, dump TEXT_YAML, PRIMARY KEY ( dump_type, dump_name ) );
CREATE TABLE sqlite_stat1(tbl,idx,stat);
CREATE TABLE tag_sibling_application ( master_service_id INTEGER, service_index INTEGER, application_service_id INTEGER, PRIMARY KEY ( master_service_id, service_index ) );
CREATE TABLE tag_parent_application ( master_service_id INTEGER, service_index INTEGER, application_service_id INTEGER, PRIMARY KEY ( master_service_id, service_index ) );
CREATE INDEX current_files_timestamp_index ON current_files (timestamp);
CREATE UNIQUE INDEX duplicate_false_positives_larger_alternates_group_id_smaller_alternates_group_id_index ON duplicate_false_positives (larger_alternates_group_id, smaller_alternates_group_id);
CREATE UNIQUE INDEX potential_duplicate_pairs_larger_media_id_smaller_media_id_index ON potential_duplicate_pairs (larger_media_id, smaller_media_id);
CREATE UNIQUE INDEX confirmed_alternate_pairs_larger_media_id_smaller_media_id_index ON confirmed_alternate_pairs (larger_media_id, smaller_media_id);
CREATE INDEX files_info_size_index ON files_info (size);
CREATE INDEX files_info_mime_index ON files_info (mime);
CREATE INDEX files_info_width_index ON files_info (width);
CREATE INDEX files_info_height_index ON files_info (height);
CREATE INDEX files_info_duration_index ON files_info (duration);
CREATE INDEX files_info_num_frames_index ON files_info (num_frames);
CREATE INDEX file_notes_note_id_index ON file_notes (note_id);
CREATE INDEX file_transfers_hash_id_index ON file_transfers (hash_id);
CREATE INDEX file_petitions_hash_id_index ON file_petitions (hash_id);
CREATE INDEX local_ratings_hash_id_index ON local_ratings (hash_id);
CREATE INDEX local_ratings_rating_index ON local_ratings (rating);
CREATE INDEX file_modified_timestamps_file_modified_timestamp_index ON file_modified_timestamps (file_modified_timestamp);
CREATE INDEX url_map_url_id_index ON url_map (url_id);
CREATE INDEX file_viewing_stats_preview_views_index ON file_viewing_stats (preview_views);
CREATE INDEX file_viewing_stats_preview_viewtime_index ON file_viewing_stats (preview_viewtime);
CREATE INDEX file_viewing_stats_media_views_index ON file_viewing_stats (media_views);
CREATE INDEX file_viewing_stats_media_viewtime_index ON file_viewing_stats (media_viewtime);
CREATE INDEX current_files_hash_id_index ON current_files (hash_id);
CREATE INDEX deleted_files_hash_id_index ON deleted_files (hash_id);
CREATE INDEX file_notes_name_id_index ON file_notes (name_id);
CREATE INDEX service_filenames_hash_id_index ON service_filenames (hash_id);
CREATE INDEX service_directories_directory_id_index ON service_directories (directory_id);
CREATE INDEX service_directory_file_map_directory_id_index ON service_directory_file_map (directory_id);
CREATE INDEX service_directory_file_map_hash_id_index ON service_directory_file_map (hash_id);
CREATE INDEX tag_parents_service_id_parent_tag_id_index ON tag_parents (service_id, parent_tag_id);
CREATE INDEX tag_parent_petitions_service_id_parent_tag_id_index ON tag_parent_petitions (service_id, parent_tag_id);
CREATE INDEX tag_siblings_service_id_good_tag_id_index ON tag_siblings (service_id, good_tag_id);
CREATE INDEX tag_sibling_petitions_service_id_good_tag_id_index ON tag_sibling_petitions (service_id, good_tag_id);
